{"version":3,"sources":["components/redux/usersReducer.js","components/profile/profileReducer.js","components/header/header.module.css","components/api/api.js","components/header/header.js","static/Header-Background.jpg","components/navbar/navbar.js","components/posts/post/post.js","components/validators/validators.js","components/common/FormsControls/FormsControls.js","components/posts/posts.js","components/redux/postsReducer.js","components/posts/postsContainer.js","components/messages/messages.js","components/dialogs/dialogsItem/dialogsItems.js","components/dialogs/dialogs.js","components/redux/dialogsReducer.js","components/dialogs/dialogsContainer.js","components/auth/auth.js","components/auth/authContainer.js","components/app/appReducers.js","components/app/app.js","components/redux/redux-store.js","index.js","components/auth/authReducer.js","components/navbar/navbar.module.css","components/common/FormsControls/FormsControls.module.css","components/dialogs/dialogs.module.css","components/hoc/AuthRedirect.js","static/spinner.svg","components/common/spinner/spinner.js","components/posts/posts.module.css"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","initialState","users","totalUserCount","pageUserCount","activePage","isFetching","followinginProgress","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","UserApi","getAllUsers","then","response","items","totalCount","unfollow","a","setUnfollow","resultCode","follow","setFollow","usersReducers","state","action","map","u","id","followed","filter","GET_PROFILE","SET_STATUS","profile","status","setStatus","getUserProfile","UserId","getProfile","console","log","data","getStatus","ProfileApi","updateStatus","profileReducer","module","exports","instance","axios","withCredentials","baseURL","headers","get","delete","post","put","AuthApi","me","login","email","password","rememberMe","logout","Header","className","classes","header","Navbar","props","topnav","item","to","activeClassName","active","href","Post","message","required","value","maxLengthCreator","maxLength","length","FormControl","input","meta","child","hasError","touched","error","styles","formControl","children","Textarea","restProps","Input","Posts","messages","this","posts","el","input_group","PostsReduxForm","onSubmit","values","addPost","newMessageBody","PureComponent","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","ADD_POST","stateInput","key","postReducers","compose","connect","addPostActionCreator","withAuthRedirect","Messages","DialogItem","LoginReduxForm","Dialogs","dialogItem","dialogs","user","messageItem","dilogsItems","ADD_POST_DIALOG","dialogReducer","newUser","addPostActionCreatorDialog","formSummError","Auth","stateLogin","isAuth","formData","loginReducer","forms","AuthContainer","getAuthData","React","Component","INIT_APP","initialize","appReducers","UsersContainer","lazy","ProfileContainer","App","initializeThunk","basename","process","path","render","Suspense","fallback","app","promise","Promise","all","withRouter","reducers","combineReducers","dialogReducers","authReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","thunk","ReactDOM","document","getElementById","GET_AUTH","setAuthData","ErrMessage","stopSubmit","_error","Spinner","src","spinner"],"mappings":"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","file":"static/js/main.8c4db85d.chunk.js","sourcesContent":["import {UserApi} from '../api/api'\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst TOTAL_USERS_COUNT = 'TOTAL_USERS_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE_FOLLOWING_PROGRESS'\n\nlet initialState = {\n    users: [],\n    totalUserCount : 21,\n    pageUserCount: 5,\n    activePage: 1,\n    isFetching: true,\n    followinginProgress: [],\n}\n\nconst usersReducers =(state=initialState,action) => {\n    switch(action.type) {\n        case FOLLOW: {\n            return {\n                ...state, \n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n\n                    }\n                    return u\n                })}\n            }\n\n        case UNFOLLOW: {\n            return {\n                ...state, \n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })}\n            }\n        case SET_USERS: {\n            return { ...state, users:[ ...action.users]}}\n        case SET_CURRENT_PAGE: {\n            return { ...state, activePage: action.activePage}}\n        case TOTAL_USERS_COUNT: {\n            return { ...state, totalUserCount: action.totalUserCount}}\n\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching}}\n        \n        case TOGGLE_FOLLOWING_PROGRESS: {\n            return { ...state, \n                followinginProgress: action.followinginProgress\n                ? [...state.followinginProgress, action.userId]\n                : state.followinginProgress.filter(id => id !== action.userId)\n            }\n        }\n        default:\n            return state\n    }\n} \n\nexport let followSuccess = (userId) => {\n    return { type : FOLLOW, userId}\n}\n\nexport let unfollowSuccess = (userId) => {\n    return {type:UNFOLLOW, userId}\n}\n\nexport let setUsers = (users) => {\n    return {type:SET_USERS, users}\n}\n\nexport let setCurrentPage = (activePage) => {\n    return {type:SET_CURRENT_PAGE, activePage}\n}\n\nexport let setTotalUsersCount = (totalUserCount) => {\n    return {type:TOTAL_USERS_COUNT, totalUserCount}\n}\n\nexport let toggleIsFetching = (isFetching) => {\n    return {type:TOGGLE_IS_FETCHING, isFetching}\n}\n\nexport let toggleFollowingProgress = (followinginProgress, userId) => {\n    return {type:TOGGLE_FOLLOWING_PROGRESS, followinginProgress, userId}\n}\n\nexport const getUsers = (activePage,pageUserCount) => {\n    return (dispatch) =>{\n    dispatch(setCurrentPage(activePage))\n    dispatch(toggleIsFetching(true))\n    UserApi.getAllUsers(activePage,pageUserCount).then(response => {\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(response.items))\n        dispatch(setTotalUsersCount(response.totalCount))\n        })\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n        let response = await UserApi.setUnfollow(userId)\n            if (response.resultCode === 0) {\n                dispatch(unfollowSuccess(userId))\n            }\n            dispatch(toggleFollowingProgress(false,userId))\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n        let response = await UserApi.setFollow(userId)\n        if (response.resultCode === 0) {\n            dispatch(followSuccess(userId))\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n}\n}\n\n\nexport default usersReducers;","import { ProfileApi, UserApi } from \"../api/api\"\n\nconst GET_PROFILE = 'GET_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\n\nlet initialState = {\n    profile: null,\n    status: \"default status\",\n}\n\nconst profileReducer =(state=initialState,action) => {\n    switch(action.type) {\n        case GET_PROFILE: {\n            return {\n                ...state, profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state, status: action.status\n            }\n        }\n        default:\n            return state\n    }\n} \n\nexport let setProfileData = (profile) => {\n    return {type:GET_PROFILE, profile}\n}\n\nexport let setStatus = (status) => {\n    return {type:SET_STATUS, status}\n}\n\nexport const getUserProfile = (UserId) => {\n    return async dispatch => {\n    let response = await UserApi.getProfile(UserId)\n    console.log(response)\n    dispatch(setProfileData(response.data))\n    }\n}\n\nexport const getStatus = (UserId) => {\n    return async dispatch => {\n    let response = await ProfileApi.getStatus(UserId)\n    dispatch(setStatus(response.data))\n    }\n}\n\nexport const updateStatus = (status) => {\n    return async dispatch => {\n    let response = await ProfileApi.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n    }\n}\n\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\"};","import * as axios from 'axios'\n\nlet instance = axios.create({\n    withCredentials: true,\n    baseURL : 'https://social-network.samuraijs.com/api/1.0',\n    headers: {'API-KEY':'7b14e426-fa0c-47bc-a6f8-9026a4b30723'}\n})\n\nexport const UserApi = {\n    getAllUsers(activePage,pageUserCount) {\n        return instance.get(`/users?page=${activePage}&count=${pageUserCount}`).then(response => {\n            return response.data\n        })\n    },\n    setUnfollow (id) {\n        return instance.delete(`/follow/`+ id).then(response => {\n            return response.data\n        })\n    },\n    setFollow (id) {\n        return instance.post(`/follow/`+ id).then(response => {\n            return response.data\n        })\n    },\n    getProfile(UserId) {\n        return ProfileApi.getProfile(UserId)\n    },\n}\n\nexport const ProfileApi = {\n    getProfile(UserId) {\n        return instance.get(`/profile/`+ UserId )\n    },\n    getStatus(UserId) {\n        return instance.get(`/profile/status/`+ UserId )\n    },\n    updateStatus(status) {\n        return instance.put(`/profile/status`, {status: status} )\n    },\n}\n\nexport const AuthApi = {\n    me() {\n        return instance.get(`/auth/me`)\n    },\n    login(email, password, rememberMe) {\n        return instance.post(`/auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`/auth/login`)\n    },\n}\n\n\n\n\n","import React from 'react';\nimport classes from './header.module.css'\nimport img from '../../static/Header-Background.jpg'\n\nconst Header = () => {\n    return (\n        <header className={classes.header} >\n            <h1>Header</h1>\n        </header>\n    )\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/Header-Background.5b74071e.jpg\";","import React from 'react';\nimport classes from './navbar.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = (props) => {\n    return (\n            <div className={classes.topnav} id=\"myTopnav\">\n                <div className={classes.item}>\n                    <NavLink to=\"/\">Home</NavLink>\n                </div>\n                <div>\n                    <NavLink to=\"/profile/\" activeClassName={classes.active}>Profile</NavLink>\n                </div>\n                <div>\n                    <NavLink to=\"/posts\" activeClassName={classes.active}>Posts</NavLink>\n                </div>\n                <div>\n                    <NavLink to=\"/dialogs\" activeClassName={classes.active}>Dialogs</NavLink>\n                </div>\n                <div>\n                    <NavLink to=\"/users\" activeClassName={classes.active}>Users</NavLink>\n                </div>\n                <a href=\"#contact\">Contact</a>\n                <a href=\"#about\">About</a>\n                <div>\n                    <NavLink to=\"/login\" activeClassName={classes.active}>Login</NavLink>\n                </div>\n            </div>\n\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport classes from './post.module.css'\n\nconst Post = (props) => {\n    return (\n        <div className={classes.post}>\n            <div>\n                {props.message}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Post;","export const required = value => {\n    if (value) return undefined;\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\n    return undefined\n}\n\n","import React from 'react'\nimport styles from '../FormsControls/FormsControls.module.css'\n\n\nexport const FormControl = ({input, meta,child, ...props}) => {\n    const hasError = meta.touched && meta.error\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n} \n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\n","import React, { PureComponent } from 'react';\nimport classes from './posts.module.css'\nimport Post from './post/post';\nimport { Field ,reduxForm} from 'redux-form';\nimport { maxLengthCreator, required } from '../validators/validators';\nimport { Textarea } from '../common/FormsControls/FormsControls';\n\nconst maxLength = maxLengthCreator(10)\n\nclass Posts  extends PureComponent {\n    render() {\n        console.log('POST RNEDER')\n        let state = this.props.posts\n\n        let addNewPost = (values) => {\n            this.props.addPost(values.newMessageBody)\n        }\n    \n        const messages = state.message.map((el) => <Post key={el.id} message={el.message}/> )\n        return (\n            <div className={classes.posts}>\n                <div className={classes.input_group}>\n                    <PostsReduxForm onSubmit={addNewPost} />\n                </div>\n                {/* <button type=\"button\" className=\"btn btn-success\" onClick={addPost}>Success</button> */}\n                <div>\n                    <h2>Posts:</h2>\n                    <div key={messages.id}>\n                        {messages}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nlet PostsForm = (props) => {\n    return (\n    <form onSubmit={props.handleSubmit}>\n        <div>\n            <Field component={Textarea} name={\"newMessageBody\"} placeholder=\"Enter your message\" validate={[required, maxLength]}/>\n        </div>\n        <div>\n            <button>Send</button>\n        </div>\n    </form>\n)}\n\nconst PostsReduxForm = reduxForm({form: 'postsForm'})(PostsForm)\n\nexport default Posts;","const ADD_POST = 'ADD-POST1'\nlet initialState = {\n    stateInput: '',\n    message: [\n        {id:1, message:\"Hello!\", key:1},\n        {id:2, message:\"Hi\", key:2},\n        {id:3, message:\"How are yoy?\", key:3},\n    ],\n    profile: null\n}\n\nconst postReducers =(state=initialState,action) => {\n    switch(action.type) {\n        case ADD_POST: {\n            return {\n                ...state,\n                message: [...state.message,{id:4, message: action.newMessageBody}],\n            }\n        }\n        default:\n            return state\n    }\n} \n\nexport let addPostActionCreator = (newMessageBody) => {\n    return { type : ADD_POST, newMessageBody}\n}\n\n\nexport default postReducers;","import React from 'react';\nimport classes from './posts.module.css'\nimport Posts from './posts'\nimport  {updatePostActionCreator, addPostActionCreator} from '../redux/postsReducer'\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.posts,\n        login: state.login\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost : (newMessageBody) => {\n            dispatch(addPostActionCreator(newMessageBody))\n        },\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Posts)\n","import React from 'react'\nimport classes from './messages.module.css'\n\nconst Messages = (props) => {\n    return (\n            <div className={classes.message}>{props.message} </div>\n    )\n}\n\nexport default Messages;\n\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\n\nconst DialogItem = (props) => {\n    return (\n        <div>\n            <NavLink to={`/dialogs/${props.id}` }>{props.name}</NavLink>\n        </div>\n\n    )\n}\n\nexport default DialogItem;","import React from 'react'\nimport classes from './dialogs.module.css'\nimport Messages from '../messages/messages';\nimport DialogItem from './dialogsItem/dialogsItems'\nimport { Field ,reduxForm} from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../validators/validators';\n\nconst maxLength = maxLengthCreator(10)\n\nconst Dialogs = (props) => {\n    let addNewPost = (values) => {\n        props.addPost(values.newMessageBody)\n    }\n    const dialogItem = props.dialogs.user.map((el) => <DialogItem id={el.id} name={el.name} key={el.key}  />)\n    const messageItem = props.dialogs.message.map((el) => <Messages id={el.id} message={el.message} key={el.key}  />)\n\n    \n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dilogsItems} key={dialogItem.key}>{dialogItem}</div>\n            <div className={classes.messages} key={messageItem.key}>\n                {messageItem}\n                <LoginReduxForm onSubmit={addNewPost}/>\n                {/* <button type=\"button\" className=\"btn btn-success\" onClick={addPost}>Success</button> */}\n            </div>\n        </div>\n    )\n}\n\nconst DialogsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field \n                component={Textarea} \n                name={\"newMessageBody\"} \n                placeholder=\"Enter your message\"\n                validate={[required,maxLength]}\n                />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'dialogsForm'})(DialogsForm)\n\nexport default Dialogs","const ADD_POST_DIALOG = 'ADD-POST-DIALOG'\nlet initialState = {\n    user: [\n        {id:1, name:\"Andrey\", key:1},\n        {id:2, name:\"Dima\", key:2},\n        {id:3, name:\"Enot\", key:3},\n    ],\n    message: [\n        {id:1, message:\"Hello!\"},\n        {id:2, message:\"Hi\"},\n        {id:3, message:\"How are yoy?\"},\n    ]\n}\n\nconst dialogReducer = (state=initialState,action) => {\n    let newUser = {\n        id: 5,\n        name: \"Enot\",\n        key:5\n    }\n    switch(action.type) {\n        case ADD_POST_DIALOG: {\n            return {\n                ...state,\n                message: [...state.message,{id:4, message: action.newMessageBody}],\n                user: [...state.user,newUser],\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport let addPostActionCreatorDialog = (newMessageBody) => {\n    return { type : ADD_POST_DIALOG, newMessageBody}\n}\nexport default dialogReducer;","import React from 'react'\nimport classes from './dialogs.module.css'\nimport Dialogs from '../dialogs/dialogs';\nimport {addPostActionCreatorDialog} from '../redux/dialogsReducer'\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../hoc/AuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogs,\n        stateInput: state.dialogs.stateInput,\n        login: state.login,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newMessageBody) => {\n            dispatch(addPostActionCreatorDialog(newMessageBody))\n        },\n    }\n}\n\n//HOC\n// let AuthRedirectComponent = (props) => {\n//     if (!props.login.isAuth) return <Redirect to={'/login'}/>\n//     return <Dialogs {...props}/>\n// }\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)","import React from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport { Field,reduxForm } from 'redux-form'\nimport { Input } from '../common/FormsControls/FormsControls'\nimport { required } from '../validators/validators'\nimport styles from '../common/FormsControls/FormsControls.module.css'\n\n\nconst Auth = (props) => {\n    const onSubmit = (formData) => {\n        props.loginReducer(formData.email, formData.password, formData.rememberMe)\n    }\n    if (props.stateLogin.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div>\n           <h1>LOGIN: </h1> {props.stateLogin.isAuth ? props.stateLogin.email : <NavLink to=\"/login\" >Auth</NavLink>}  \n            <LoginReduxForm onSubmit={onSubmit} forms={props.forms}/>\n        </div>\n    )\n}\n\nconst LoginForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    <Field placeholder={\"Email\"} name={\"email\"} component ={Input}\n                    validate={[required]}/>\n                </div>\n                <div>\n                    <Field placeholder={\"Password\"} validate={[required]} type={\"password\"} name={\"password\"}  component ={Input}/>\n                </div>\n                <div>\n                    <Field type={\"checkbox\"} name={\"rememberMe\"} component ={Input}/> remember me\n                </div>\n                {props.error && <div className={styles.formSummError}>\n                    {props.error}\n                </div>}\n                <div>\n                    <button>Login</button>\n                </div>\n            </form>\n        </div>\n    )}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nexport default Auth","import React from 'react'\nimport { connect } from 'react-redux'\nimport Auth from './auth'\nimport { getAuthData,loginReducer, logout } from './authReducer'\n\nclass AuthContainer extends React.Component {\n    componentDidMount() {\n        this.props.getAuthData()\n    }\n\n    render() {\n        return <Auth \n        stateLogin={this.props.login} \n        loginReducer={this.props.loginReducer} \n        logout={this.props.logout} \n        forms={this.props.form}/>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        login: state.login,\n        forms: state.form.login\n    }\n}\n\nexport default connect(mapStateToProps, {getAuthData,loginReducer, logout})(AuthContainer)","import { getAuthData } from \"../auth/authReducer\"\n\nconst INIT_APP = 'INIT_APP'\n\nlet initialState = {\n    initialize: false,\n}\n\nconst appReducers =(state=initialState,action) => {\n    switch(action.type) {\n        case INIT_APP: {\n            return {\n                ...state, initialize: true,\n            }\n        }\n        default:\n            return state\n    }\n} \n\nexport let initializeActionCreator = () => {\n    return {type:INIT_APP}\n}\n\n\nexport const initializeThunk = () => {\n    return (dispatch) => {\n        let promise = dispatch(getAuthData())\n        Promise.all([promise]).then(() => {\n            dispatch(initializeActionCreator())\n        })\n    }\n}\n\nexport default appReducers;","import React from 'react';\nimport Header from '../header/header';\nimport Navbar from '../navbar/navbar';\nimport PostsContainer from '../posts/postsContainer';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport DialogsContainer from '../dialogs/dialogsContainer';\n// import UsersContainer from '../users/usersContainer';\n// import ProfileContainer  from '../profile/profileContainer';\nimport AuthContainer from '../auth/authContainer';\nimport { compose } from 'redux';\nimport { initializeThunk } from '../app/appReducers'\nimport { connect } from 'react-redux'\nimport { withRouter } from \"react-router\"; \nimport Spinner from '../common/spinner/spinner';\nconst UsersContainer = React.lazy(() => import('../users/usersContainer'));\nconst ProfileContainer = React.lazy(() => import( '../profile/profileContainer'));\nclass App extends React.Component {\n    componentDidMount() {\n         this.props.initializeThunk()\n    }\n    render() {\n        if (!this.props.initialize) {\n            return <Spinner/>\n        }\n        return (\n            <div>\n                <BrowserRouter basename={process.env.PUBLIC_URL} >\n                    <Navbar/>\n                    <Header/>\n                    <div className=\"app-wrapper-content\"> \n                        <Route path=\"/dialogs\" render={() => {return <React.Suspense fallback={<Spinner/>}><DialogsContainer/></React.Suspense>}}/>\n                        <Route path=\"/profile/:userId?\" render={() => {return<React.Suspense fallback={<Spinner/>}><ProfileContainer/></React.Suspense>}}/>\n                        <Route path=\"/posts\" render={() => <PostsContainer/>}/>\n                        <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                        <Route path=\"/login\" render={() => <AuthContainer/>}/>\n                    </div>\n                </BrowserRouter>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        initialize: state.app.initialize,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {initializeThunk}),\n    withRouter,\n    // withAuthRedirect\n)(App)\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport dialogReducers from './dialogsReducer'\nimport postReducers from './postsReducer'\nimport usersReducers from './usersReducer';\nimport profileReducer from '../profile/profileReducer';\nimport authReducer from '../auth/authReducer';\nimport thunkMiddleWare from 'redux-thunk'\nimport appReducers from '../app/appReducers'\nimport {reducer as formReducer} from 'redux-form'\nimport thunk from 'redux-thunk';\n\nlet reducers = combineReducers({\n    dialogs: dialogReducers,\n    posts: postReducers,\n    users: usersReducers,\n    profile: profileReducer,\n    login: authReducer,\n    form: formReducer,\n    app: appReducers,\n})\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare,thunk)))\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app'\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './components/redux/redux-store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>,document.getElementById('root'))\n","import { stopSubmit } from \"redux-form\"\nimport { AuthApi } from \"../api/api\"\n\nconst GET_AUTH = 'GET_AUTH'\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer =(state=initialState, action) => {\n    switch(action.type) {\n        case GET_AUTH: {\n            return {\n                ...state, ...action\n            }\n        }\n        default:\n            return state\n    }\n} \n\nexport let setAuthData = (id,email,login,isAuth) => {\n    return {type:GET_AUTH, id,email,login,isAuth}\n}\n\nexport const getAuthData = () => {\n    return async (dispatch) => {\n        let response = await AuthApi.me()\n            if (response.data.resultCode === 0) {\n                let {id,email,login} = response.data.data\n                dispatch(setAuthData(id,email,login, true))\n        }\n    }\n}\n\nexport const loginReducer = (email, password, rememberMe) => {\n    return async (dispatch) => {\n        let response = await AuthApi.login(email, password, rememberMe)\n            if (response.data.resultCode === 0) {\n                dispatch(getAuthData())\n            } else {\n                let ErrMessage = response.data.messages.length > 0 ?  response.data.messages[0] : \"Some error\"\n                dispatch(stopSubmit('login',{_error: ErrMessage}))\n        }\n    }\n}\n\nexport const logout = () => {\n    return async (dispatch) => {\n        let response = await AuthApi.logout()\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthData(null,null,null,false))\n        }\n    }\n}\n\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topnav\":\"navbar_topnav__37qta\",\"active\":\"navbar_active__1LL-m\",\"icon\":\"navbar_icon__TbL-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummError\":\"FormsControls_formSummError__tnFPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2B_-5\",\"dilogsItems\":\"dialogs_dilogsItems__39KYh\",\"active\":\"dialogs_active__25GoT\",\"dialog\":\"dialogs_dialog__2oT6c\",\"messages\":\"dialogs_messages__3lqZz\",\"message\":\"dialogs_message__1Id2-\"};","import { ReactReduxContext } from \"react-redux\";\nimport React from 'react'\nimport { Redirect } from 'react-router-dom';\n\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.login.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props}/>\n        }\n    }    \n    return RedirectComponent\n}\n","export default __webpack_public_path__ + \"static/media/spinner.b767aab4.svg\";","import React from 'react'\nimport spinner from '../../../static/spinner.svg'\n\nlet Spinner = () => {\n    return <div><img src={spinner}/></div>\n}\n\nexport default Spinner","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__2Qjhz\",\"input_group\":\"posts_input_group__V2AaR\"};"],"sourceRoot":""}